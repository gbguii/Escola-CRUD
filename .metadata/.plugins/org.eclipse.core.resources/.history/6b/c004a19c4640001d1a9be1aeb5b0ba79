package beanView;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import Exception.ShoolException;
import Implementation.StudentImpl;
import obj.StudentObj;

public class ShoolStudentView extends AbstractBeanView{
	
	public ShoolStudentView() {
		this.loadClass();
	}
	
	
	private StudentImpl studentImpl = new StudentImpl();
	private List<StudentObj> studentList = new ArrayList<>();
	
	
	private void loadClass() {
		try {
			studentList = studentImpl.getStudentList();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void printStudent() {
		if(!this.getStudentList().isEmpty()) {
			for(StudentObj student : this.getStudentList()) {
				System.out.println(student.getId() + " - " + student.getFirstName()  + " " + student.getLastName());
			}
		}
	}
	
	/**
	 * Cria a primeira instância de um estudante.
	 * @return Retorna o objeto do estudante.
	 * @throws ShoolException em caso de erro ao criar um estudante.
	 */
	public StudentObj createStudent() throws ShoolException {
		// Cria um objeto de estudante.
		StudentObj student = new StudentObj();
		// Inicializa um scanner.
		Scanner sc = new Scanner(System.in);
		// Informa ao usuário para digitar o primeiro nome.
		System.out.print("Informe o primeiro nome do estudante: ");
		// Recupera o nome digitado e valida.
		String firstName = this.validateName(sc.nextLine());
		// Informa ao usuário para digitar o último nome.
		System.out.print("\nInforme o sobrenome do estudante: ");
		// Recupera o nome digitado e valida.
		String LastName = this.validateName(sc.nextLine());
		// Define o primeiro nome no objeto.
		student.setFirstName(firstName);
		// Define o ultimo nome no objeto.
		student.setLastName(LastName);
		try {
			studentImpl.create(student);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		// Fecha o scanner.
		sc.close();
		// Retorna o objeto.
		return student;
	}
	
	public StudentObj getStudent() {
		StudentObj student = new StudentObj();
		Scanner sc = new Scanner(System.in);
		System.out.print("Digite o id do usuário: ");
		Long id = sc.nextLong();
		try {
			student = this.studentImpl.getStudentById(id);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		sc.close();
		return student;
	}
	
	/**
	 * Retorna a lista de estudantes.
	 * @return a lista de estudantes.
	 */
	public List<StudentObj> getStudentList() {
		return studentList;
	}
	
	/**
	 * Define a lista de estudantes.
	 * @param studentList lista de estudante.
	 */
	public void setStudentList(List<StudentObj> studentList) {
		this.studentList = studentList;
	}
	
}
